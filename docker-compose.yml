version: "4"
services:
    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "443:443"
            - 3000:80
        # networks:
            # - grafana-loki
        networks:
            - kafka-network
        # command: >
        #   apt-get update -y
        #   && apt-get install -y iputils-ping

        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./site-content:/var/www/html
            # - ./loki/htpasswd:/etc/nginx/conf.d/.htpasswd:ro

    mongo:
        image: mongo:7.0.6
        container_name: mongo_db
        ports:
            - "27017:27017" # MongoDB port
        environment:
            MONGO_INITDB_ROOT_USERNAME: "admin"
            MONGO_INITDB_ROOT_PASSWORD: "admin"
        networks:
            - kafka-network
        volumes:
            - dbdata:/data/db
            - ./mongod.conf:/etc/mongod.conf
        command: mongod --auth --config /etc/mongod.conf # Enable authentication
        restart: unless-stopped

    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.2
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        networks:
            - kafka-network

    kafka:
        image: confluentinc/cp-kafka:7.3.2
        hostname: kafka
        container_name: kafka
        ports:
            - "9092:9092"
        environment:
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.18.0.6:9092,PLAINTEXT_HOST://kafka:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_CREATE_TOPICS: "unprocessed_accounts:1:1,unprocessed_profiles:1:1"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
            KAFKA_MIN_INSYNC_REPLICAS: "1"
        depends_on:
            - zookeeper
        networks:
            - kafka-network

    server-app:
        container_name: server-app
        image: nhanhdocker/arm:v5
        networks:
            - kafka-network
        ports:
            - "8081:8080"

    

    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        networks:
            - kafka-network
        depends_on:
            - kafka
        ports:
            - 19000:8080
        environment:
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

    # loki:
    #     image: grafana/loki:latest
    #     volumes:
    #         - ./loki/loki-conf.yml:/etc/loki/local-config.yaml
    #         - loki-data:/loki
    #     networks:
    #         - grafana-loki

    # grafana:
    #     image: grafana/grafana:main
    #     restart: unless-stopped
    #     ports:
    #         - "4000:3000"
    #     networks:
    #         - grafana-loki
    #     volumes:
    #         - grafana-data:/var/lib/grafana
    #         - grafana.ini:/etc/grafana/grafana.ini

volumes:
    dbdata:
    # loki-data:
    # grafana-data:

networks:
    kafka-network:
        driver: bridge
    # grafana-loki:
